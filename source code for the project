#include <iostream>
	#include <fstream>
	#include <cstdlib>
	#include <iomanip>
	#include <windows.h>
	#include <conio.h>
	#include <vector>
	#include <iterator>
    #include <algorithm>
	using namespace std;
	int id=10,dd=0;
	const int Size=500;
	void Menu(){HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
		SetConsoleTextAttribute(font_color,11);
	        cout<<"+ + + + + + + + + + + + + + + + + + + +"<<endl;
	        cout<<"+ What do you want to do? 	  		 +"<<endl;
	        cout<<"+ 1. Update drug store   		 	 +"<<endl;
	        cout<<"+ 2. View drug store     			 +"<<endl;
	        cout<<"+ 3. View drug stack     			 +"<<endl;
            cout<<"+ 4. Delete a medicine   			 +"<<endl;
	        cout<<"+ 5.	Drug disposal                    +"<<endl;
	        cout<<"+ 6. Disposed Medicines  			 +"<<endl;
	        cout<<"+ 7. Daily total sales 		    	 +"<<endl;
	        cout<<"+ 8. Modify An Entry 		    	 +"<<endl;
	        cout<<"+ M. Back to Main Menu    			 +"<<endl;
	        cout<<"+ P. Total profit Vs Total cost   	 +"<<endl;
	        cout<<"+ A. About                			 +"<<endl;
	        cout<<"+ E. Exit                 			 +"<<endl;
	        cout<<"+ + + + + + + + + + + + + + + + + + + +"<<endl;
		SetConsoleTextAttribute(font_color,7);

	}


	void customMenu(){
		HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
		SetConsoleTextAttribute(font_color,14);
		cout<<"+ + + + + + + + + + + + + + + +"<<endl;
		cout<<"+ What do you want to do?     +"<<endl;
		cout<<"+ 1. View drug store          +"<<endl;
		cout<<"+ 2. View drug availability   +"<<endl;
	    cout<<"+ 3. Place Order              +"<<endl;
	    cout<<"+ 4. Back to Main Menu        +"<<endl;
	    cout<<"+ 5. Exit                     +"<<endl;
		cout<<"+ + + + + + + + + + + + + + + +"<<endl;
	}

	void About(){HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
		SetConsoleTextAttribute(font_color,6);
		cout<<"This system is designed to handle the transactons of a pharmacy medical store managemet.\n"
		    <<"It is straight forward since it has a specified descriptive heading  for each task except \n"
			<<"one thing,which is sometimes at the time of run you may look a red lightning,which indicates\n"
			<<"that,there is a drug in the store that has been expired and need to be disposed."<<endl;
	}


	struct Date{
	    int dd,mm,yy;
	};

	struct medicine_types{
		int ID,quantity,number_of_sold;
		float price,cost_of_each_drug;
		string name;
		Date Manufacture_date,Expiry_date;
		string type;

	};

	struct sale{
     int customer_id,quantity_sold;
	 string customer_name;
	 int med_id;
	 float cost;
	 float m_price;
	 string med_name;
	 Date sale_date;
	};

	vector<medicine_types> Disposed_med;
    vector<sale> sale_history;

	void Store_Drug (vector<medicine_types> &medicine);
    void View_store(vector<medicine_types> &stored);
    void main_menu(vector<medicine_types> store,char name[]);
	void admin_menu(vector<medicine_types> store,char name[]);
	void customer_menu(vector<medicine_types> store,char name[]);
    void Notification_bar();
    void Loading_bar();
    void check_stack(vector<medicine_types> &Med_stack);
    void Struct_Initializer(vector<medicine_types> &store);
    void Delete_All(vector<medicine_types> &store);
    void Delete_Entry(vector<medicine_types> &store);
    void Expiry_Notification_Indicator(vector<medicine_types> &Medicines);
    void delete_entry(vector<medicine_types> &store,int id);
    void Drug_Disposal(vector<medicine_types> &store);
    void Disposed_Medicines();
    void To_Buy_Medicine(vector<medicine_types> &store);
    void Total_sales_table(vector<medicine_types> &store);
    void Profit_Analysis(vector<medicine_types> &store);
    void Modify_Entry(vector<medicine_types> &store);
    void Write_to_File(vector<medicine_types> &store,char fileName[]);
    void Read_from_file(vector<medicine_types> &store,char fileName[]);

    //Main function
	int main(){
        vector<medicine_types> store;
        Struct_Initializer(store);
        char second[]="store.txt";
        char fileName[]="Pharmacy.txt";
        //Write_to_File(store,fileName);
        Read_from_file(store,"Pharmacy.txt");
        main_menu(store,fileName);

	return 0;
	}//End of main


    void Notification_bar(){
		system("color 04");
		cout<<"\t\t\t\t\nYou have expired drugs...";
		char x=219;
		for(int i=0;i<40;i++){
			cout<<x;
			Sleep(2);
		}
		system("color 07");
		Sleep(5);
		cout<<endl;
	}

	void Loading_bar(){
		system("color 02");
		cout<<"\n\n\n\n Loading";
		char x=219;

		for(int i=0;i<60;i++){
			Sleep(5);
			cout<<x;
		}
		system("color 07");
		cout<<endl<<endl;
	}

	void main_menu(vector<medicine_types> store,char name[])
	{
	    HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
		system("cls");
		SetConsoleTextAttribute(font_color,10);
		cout<<"                    ---------------------------------------"<<endl;
		cout<<"                    ---------------------------------------"<<endl;
	    cout<<"--------------------|Welcome to Our Pharmacy store Program| --------------------"<<endl;
	    cout<<"                    ---------------------------------------"<<endl;
		cout<<"                    ---------------------------------------"<<endl;
	    char chioce;
	    do
	    {
            SetConsoleTextAttribute(font_color,9);
            cout << "\n\n\n\tMAIN MENU";
            cout << "\n\n\tA. ADMINISTRATOR";
            cout << "\n\n\tC. CUSTOMER";
            cout << "\n\n\tE. EXIT";
            cout << "\n\n\tPlease Select Your Option: ";
            input:
            cin>>chioce;
            switch (chioce)
            {   case 'a':
                case 'A':Loading_bar();
                         admin_menu(store,name);
                break;
                case 'c':
                case 'C':Loading_bar();
                       customer_menu(store,name);
                break;
                case 'e':
                case 'E':
                        Loading_bar();
                        cout<<"You choose to to exit the program"<<endl;
                        system("pause");
                        exit(0);
                default:Loading_bar();
                    cout << "Incorrect choice try again... ";goto input;

            }
	    }while(true);

	}


	void admin_menu(vector<medicine_types> store,char name[])
	{
		char choice;
	    do{
		Expiry_Notification_Indicator(store); //function call to indicate existance of expired drug
        system("cls");
	   	Menu();
	   	cout<<"Enter your choice here: ";
	   	input:
	   	cin>>choice;
	   	switch(choice){

	   		case '1':Loading_bar();
	   				system("cls");
	   				Expiry_Notification_Indicator(store); //function call to indicate existance of expired drug
	   				system("cls");
			   		Store_Drug(store);
	    			system("pause");
	    			View_store(store);
	    			system("pause");
	    			break;
	    	case '2':Loading_bar();
	    			system("cls");
	    			Expiry_Notification_Indicator(store); //function call to indicate existance of expired drug
	    			system("cls");
					View_store(store);
	    			system("pause");
	    			break;
            case '3':Loading_bar();
                    system("cls");
                    Expiry_Notification_Indicator(store);
	    			system("cls");
	    			check_stack(store);
	    			system("pause");
            break;
            case '4':Loading_bar();
                     system("cls");
                     Expiry_Notification_Indicator(store);
	    			 system("cls");
                     Delete_Entry(store);
                     system("pause");
            break;
            case '5':Loading_bar();
                     system("cls");
                     Expiry_Notification_Indicator(store);
	    			 system("cls");
	    			 Drug_Disposal(store);
                     system("pause");
            break;
            case '6':Loading_bar();
                     system("cls");
                     Expiry_Notification_Indicator(store);
	    			 system("cls");
	    			 Disposed_Medicines();
	    			 system("pause");
            break;
            case '7':Loading_bar();
                     system("cls");
                     Expiry_Notification_Indicator(store);
                     system("cls");
                     Total_sales_table(store);
                     system("pause");
            break;
            case '8':Loading_bar();
                     system("cls");
                     Expiry_Notification_Indicator(store);
                     system("cls");
                     Modify_Entry(store);
                     View_store(store);
                     system("pause");
            break;
            case 'p':
            case 'P':Loading_bar();
                     system("cls");
                     Expiry_Notification_Indicator(store);
                     system("cls");
                     Profit_Analysis(store);
                     system("pause");
            break;
            case 'm':
            case 'M':Loading_bar();
                     system("cls");
                     main_menu(store,name);
	    			 system("pause");
            break;
            case 'a':
            case 'A':Loading_bar();
                     system("cls");
                     About();
                     system("pause");
            break;
            case 'e':
            case 'E': cout<<"You choose to exit."<<endl;
                      system("pause");
                      exit(0);
            default: cout<<"Wrong input enter again: "; goto input;
	   	}

	    }while(true);

	}

	void customer_menu(vector<medicine_types> store,char name[])
	{   label_mm:
		int choice;
	    do{
	     system("cls");
	   	customMenu();
	   	cout<<"Enter your choice here: "; cin>>choice;
	   	switch(choice){
	   		case 1: Loading_bar();
	   				system("cls");
			   		View_store(store);
	    			system("pause");
            break;
	    	case 2: Loading_bar();
	    			system("cls");
					check_stack(store);
	    			system("pause");
            break;
	    	case 3: Loading_bar();
	    			system("cls");
					To_Buy_Medicine(store);
	    			system("pause");
            break;
	    	case 4: Loading_bar();
	    			system("cls");
					main_menu(store,name);
	    			system("pause");
            break;
	    	case 5: Loading_bar();
					cout<<"You choose to to exit the program"<<endl;
			        system("pause");
					exit(0);
			default: cout<<"Incorrect choice enter again..."<<endl; goto label_mm; break;
		   }

	   }while(true);
	}


	 void Struct_Initializer(vector<medicine_types> &store){

        store.push_back({1,205,15,55.67,23.50,"Paracetamol",12,12,2020,11,11,2022,"antibiotic"});
	    store.push_back({2,3,0,100.90,56.77,"Humalog",10,12,2018,11,11,2020,"anti-diabetic"});
	    store.push_back({3,4,0,120.99,50.23,"Phoslo",12,12,2019,18,9,2021,"antibiotic"});
	    store.push_back({4,156,0,125.55,10.99,"Aspirin",12,12,2020,11,7,2021,"antibiotic"});
	    store.push_back({5,256,0,150.90,89.99,"Vicks",12,12,2020,11,11,2024,"anti-tussive"});
	    store.push_back({6,5,0,200.55,120.66,"Xyzal",12,12,2018,11,11,2019,"anti-histamine"});
	    store.push_back({7,100,0,99.78,50,"Nexplanon",12,12,2020,11,11,2029,"contraceptives"});
	    store.push_back({8,690,0,180,110.99,"Meclizine",12,12,2020,11,11,2022,"antibiotic"});
	    store.push_back({9,324,0,175.76,100.67,"Lisinoprril",12,12,2020,11,11,2022,"anti-hyper"});
	    store.push_back({10,222,0,145.78,99.54,"Afrin",12,12,2020,11,11,2021,"anti-pyretic"});
	}

	void Delete_All(vector<medicine_types> &store){
		store.clear();id=0;
	}
