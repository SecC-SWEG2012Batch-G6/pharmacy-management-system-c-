	#include <iostream>
	#include <fstream>
	#include <iomanip>
	#include <string>
	#include <windows.h>
	#include <cstdlib>
	using namespace std;
	
	void Menu(){HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
		SetConsoleTextAttribute(font_color,11);
	
	        cout<<"+ + + + + + + + + + + + + + + + + + + +"<<endl;
	        cout<<"+ What do you want to do? 	  		 +"<<endl;
	        cout<<"+ 1. Update drug store   		 	 +"<<endl;
	        cout<<"+ 2. View drug store     			 +"<<endl;
	        cout<<"+ 3. View drug stack     			 +"<<endl;
	        cout<<"+ 4. Modify An Entry      			 +"<<endl;
	        cout<<"+ 5. Delete a medicine   			 +"<<endl;
	        cout<<"+ 6. Disposed Medicines  			 +"<<endl;
	        cout<<"+ 7. Daily total sales 		    	 +"<<endl;
	        cout<<"+ M. Back to Main Menu    			 +"<<endl;
	        cout<<"+ P. Total profit Vs Total cost   	 +"<<endl;
	        cout<<"+ A. About                			 +"<<endl;
	        cout<<"+ E. Exit                 			 +"<<endl;
	        cout<<"+ + + + + + + + + + + + + + + + + + + +"<<endl;
		SetConsoleTextAttribute(font_color,7);
	
	}
	void About(){HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
		SetConsoleTextAttribute(font_color,6);
		cout<<"This system is designed to handle the transactons of a pharmacy medical store managemet.\n"
		    <<"It is straight forward since it has a specified descriptive heading  for each task except \n"
			<<"one thing,which is sometimes at the time of run you may look a red lightning,which indicates\n"
			<<"that,there is a drug in the store that has been expired and need to be disposed."<<endl;
	}
	 int id=9;
	struct Date{
	    int dd,mm,yy;
	};
	
	struct medicine_types{
	int ID,quantity,number_of_sold;
	float price,cost_of_each_drug;
	string name;
	Date Manufacture_date,Expiry_date;
	string type;
	
	};
	
	medicine_types *med=new medicine_types;
	void read_write(medicine_types myMed[],char file[],int ch=1);
	void Store_Drug();
	void store_initializer();
	void View_store();
	void check_stack();
	void Expiry_Notification_Indicator();
	void Notification_bar();
	void Delete_Med(int M_id);
	void Update_Med();
	void Dispose_Med();
	
	
	void Loading_bar(){
		system("color 02");
		cout<<"\n\n\n\n Loading";
		char x=219;
	
		for(int i=0;i<60;i++){
			Sleep(5);
			cout<<x;
		}
		system("color 07");
		cout<<endl<<endl;
	}
	
	int main(){
	    Loading_bar();
		med->number_of_sold=0;
	    int idd;
		HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
		system("cls");
		SetConsoleTextAttribute(font_color,10);
		cout<<"                    ---------------------------------------"<<endl;
		cout<<"                    ---------------------------------------"<<endl;
	    cout<<"--------------------|Welcome to Our Pharmacy store Program| --------------------"<<endl;
	    cout<<"                    ---------------------------------------"<<endl;
		cout<<"                    ---------------------------------------"<<endl;
		SetConsoleTextAttribute(font_color,7);
		int c;
		cout<<"Do you want to inialize the store?..."; cin>>c;
		if(c==1){
			store_initializer();
		}
	
	 	do{char choice;
	 	Expiry_Notification_Indicator();
	         system("cls");
	 	   Menu();
	 	   input:
	         cout<<"Enter your choice here: "; cin>>choice;
		   switch(choice){
		       case '1': Loading_bar();
	                     system("cls");
		   	     	     Store_Drug();
	           break;
	  	       case '2': Loading_bar();
	                     system("cls");
	                     View_store();
	  	     	    	 system("pause");
	   	       break;
	   	       case '3':Loading_bar();
	                    system("cls");
	                    check_stack();
	                    system("pause");
	           break;
	           case '4':Loading_bar();
	                    system("cls");
	                    Update_Med();
	                    system("pause");
	           break;
	           case '5':Loading_bar();
	                    system("cls");
	                    cout<<"Enter medicine id: "; cin>>idd;
	                    Delete_Med(idd);
	                    system("pause");
	           break;
	           case '6':Loading_bar();
	                    system("cls");
			   			Dispose_Med();
			   			View_store();
			   			system("pause");
			   break;
	   	       case 'a':
	           case 'A':Loading_bar();
	                    system("cls");
	                    About();
	                    system("pause");
	           break;
	   	       case 'e':
	           case 'E': Loading_bar();
		           	    cout<<"You choose to exit!!!"<<endl;
		           	    exit(0);
		       default: cout<<"Incorrect choice try again"<<endl; goto input;
		   }
	
		 }while(true);
	
	
	
	
	}  ///End of main function
	
	
	void Notification_bar(){
		system("color 04");
		cout<<"\t\t\t\t\nYou have expired drugs...";
		char x=219;
		for(int i=0;i<40;i++){
			cout<<x;
			Sleep(2);
		}
		system("color 07");
		Sleep(5);
		cout<<endl;
	
	}
	
	void read_write(medicine_types myMed[],char file[],int ch){
	if(ch==1){
		ofstream ofile(file);
		if(ofile.is_open()){
			for(int i=0;i<id;i++){
		ofile<<myMed[i].ID<<" ";
		ofile<<myMed[i].name<<" ";
		ofile<<myMed[i].quantity<<" ";
		ofile<<myMed[i].price<<" ";
		ofile<<myMed[i].cost_of_each_drug<<" ";
		ofile<<myMed[i].number_of_sold<<" ";
		ofile<<myMed[i].type<<" ";
		ofile<<myMed[i].Manufacture_date.dd<<" ";
		ofile<<myMed[i].Manufacture_date.mm<<" ";
		ofile<<myMed[i].Manufacture_date.yy<<" ";
		ofile<<myMed[i].Expiry_date.dd<<" ";
		ofile<<myMed[i].Expiry_date.mm<<" ";
		ofile<<myMed[i].Expiry_date.yy<<" ";
		}
		
	}
	else{
		cout<<"open failed"<<endl;
	}
	
	}
	else{
		ifstream infile(file);
		if(infile.is_open()){
			for(int i=0;i<id;i++){
		infile>>myMed[i].ID;
		infile>>myMed[i].name;
		infile>>myMed[i].quantity;
		infile>>myMed[i].price;
		infile>>myMed[i].cost_of_each_drug;
		infile>>myMed[i].number_of_sold;
		infile>>myMed[i].type;
		infile>>myMed[i].Manufacture_date.dd;
		infile>>myMed[i].Manufacture_date.mm;
		infile>>myMed[i].Manufacture_date.yy;
		infile>>myMed[i].Expiry_date.dd;
		infile>>myMed[i].Expiry_date.mm;
		infile>>myMed[i].Expiry_date.yy;
	}
	}
	}
}
	
	void store_initializer(){
		ofstream ofile("Pharmacy.text");
		ofile<<1<<" "<<"paracetamol"<<" "<<205<<" "<<" "<<55.67<<" "<<23.50<<" "<<0
		     <<" "<<"antibiotic"<<" "<<12<<" "<<12<<" "<<2020<<" "<<11<<" "<<11<<" "
		     <<2022<<" "<<endl;
	      ofile<<2<<" "<<"Humalog"<<" "<<30<<" "<<" "<<100.67<<" "<<56.50<<" "<<0
		     <<" "<<"anti-diabetic"<<" "<<12<<" "<<12<<" "<<2018<<" "<<11<<" "<<11<<" "
		     <<2022<<" "<<endl;
	      ofile<<3<<" "<<"Aspirin"<<" "<<125<<" "<<150.67<<" "<<67.50<<" "<<0
		     <<" "<<"antibiotic"<<" "<<12<<" "<<12<<" "<<2020<<" "<<11<<" "<<11<<" "
		     <<2022<<" "<<endl;
	      ofile<<4<<" "<<"Vicks_Formula_44"<<" "<<256<<" "<<" "<<150.67<<" "<<91.50<<" "<<0
		     <<" "<<"anti-tussive"<<" "<<12<<" "<<12<<" "<<2016<<" "<<11<<" "<<11<<" "
		     <<2020<<" "<<endl;
	      ofile<<5<<" "<<"Xyzal"<<" "<<100<<" "<<" "<<89.67<<" "<<23.50<<" "<<0
		     <<" "<<"anti-histamine"<<" "<<1<<" "<<10<<" "<<2020<<" "<<11<<" "<<11<<" "
		     <<2021<<" "<<endl;
	      ofile<<6<<" "<<"Nexplanon"<<" "<<200<<" "<<" "<<110.67<<" "<<68.50<<" "<<0
		     <<" "<<"contraceptives"<<" "<<24<<" "<<12<<" "<<2020<<" "<<10<<" "<<8<<" "
		     <<2022<<" "<<endl;
	      ofile<<7<<" "<<"Meclizine"<<" "<<166<<" "<<" "<<135.67<<" "<<78.50<<" "<<0
		     <<"antibiotic"<<" "<<8<<" "<<9<<" "<<2009<<" "<<11<<" "<<11<<" "
		     <<2018<<" "<<endl;
	      ofile<<8<<" "<<"Afrin"<<" "<<90<<" "<<" "<<55.67<<" "<<23.50<<" "<<0
		     <<" "<<"anti-septic"<<" "<<6<<" "<<12<<" "<<2017<<" "<<11<<" "<<11<<" "
		     <<2024<<" "<<endl;
	      ofile<<9<<" "<<"Lisinoprril"<<" "<<205<<" "<<" "<<55.67<<" "<<23.50<<" "<<0
		     <<" "<<"anti-hyper"<<" "<<12<<" "<<12<<" "<<2020<<" "<<11<<" "<<11<<" "
		     <<2022<<" "<<endl;
		ofile.close();
	}
	
	
	
	
	void Store_Drug (){
	    medicine_types Med;
		int k,num_of_med;
		cout<<"Do you want to continue with the default stack or you want to enter from scratch?1/0"<<endl;
		cin>>k;
		Loading_bar();
		system("cls");
		cout<<"How many number of medicine you are going to store"<<endl;
		cin>>num_of_med;
		Loading_bar();
		system("cls");
		switch(k){
	
		case 1:
		{	ofstream file("Pharmacy.text",ios::app);
			cout<<"\n continued Enter the necessary informations for the drug you want to store!!!"<<endl;
			for(int i=0;i<num_of_med;++i){
				system("cls");
			      Med.ID=id+1;
				cout<<"Drug ID: "<<Med.ID<<endl;
				file<<Med.ID<<" ";
				cin.ignore();
				cout<<"Enter Drug Name: "; getline(cin,Med.name);
				file<<Med.name<<" ";
				cin.ignore();
				cout<<"Enter the quantity of this medicine: ";
				labe20:
	            cin.ignore();
				cin>>Med.quantity;
				if(med->quantity<=0){
					cout<<"No such Quantity,enter again "; goto labe20;
				}
				file<<Med.quantity<<" ";
				cout<<"Enter Price: ";
				label21:
				cin>>Med.price;
				if(Med.price<0){
					cout<<"Price can't be negative,enter again "; goto label21;
				}
				file<<Med.price<<" ";
				cout<<"Enter Cost: ";
				label22:
				cin>>Med.cost_of_each_drug;
				if(Med.price<0){
					cout<<"Negative value is not allowed,enter again "; goto label22;
				}
				file<<Med.cost_of_each_drug<<" ";
				Med.number_of_sold=0;
				file<<Med.number_of_sold<<" ";
				cout<<"Enter Drug type(E.g Antibitic,Antiseptic,Disinfectant...): "; cin>>Med.type;
				file<<Med.type<<" ";
				cin.ignore();
				cout<<"Enter Manufactured Date: \n";
				label3:
				cout<<"      Day: "; cin>>Med.Manufacture_date.dd;
				if(Med.Manufacture_date.dd>31 || Med.Manufacture_date.dd<1){
					cout<<"Incorrect date out of bound enter again(1-31)!!!"<<endl;
					goto label3;
				}
				file<<Med.Manufacture_date.dd<<" ";
				label4:
				cout<<"      Month: "; cin>>Med.Manufacture_date.mm;
				if(Med.Manufacture_date.mm>12 || Med.Manufacture_date.mm<1){
					cout<<"Incorrect month out of bound enter again(1-12)!!!"<<endl;
					goto label4;
				}
				file<<Med.Manufacture_date.mm<<" ";
				label5:
				cout<<"      Year: "; cin>>Med.Manufacture_date.yy;
				if(Med.Manufacture_date.yy<2000 && Med.Manufacture_date.yy>2100){
					cout<<"Incorrect year out of bound enter again(2000-)!!!"<<endl;
					goto label5;
				}
				file<<Med.Manufacture_date.yy<<" ";
				label6:
				cout<<"Enter Expiry Date: \n";
				cout<<"      Day: "; cin>>Med.Expiry_date.dd;
				if(Med.Expiry_date.dd>31 || Med.Expiry_date.dd<1){
					cout<<"Incorrect date out of bound enter again(2000-)!!!"<<endl;
					goto label6;
				}
				file<<Med.Expiry_date.dd<<" ";
				label7:
				cout<<"      Month: "; cin>>Med.Expiry_date.mm;
				if(Med.Expiry_date.mm>12 || Med.Expiry_date.mm<1){
					cout<<"Incorrect month out of bound enter again(1-12)!!!"<<endl;
					goto label7;
				}
				file<<Med.Expiry_date.mm<<" ";
				label8:
				cout<<"      Year: "; cin>>Med.Expiry_date.yy;
				if(Med.Expiry_date.yy<2000){
					cout<<"Incorrect month out of bound enter again(2000-)!!!"<<endl;
					goto label8;
				}
				file<<Med.Expiry_date.yy<<endl;
				id++; cout<<"\n\n";
				Loading_bar();
	
			}
	
			file.close();
		} break;
	
		default:
		   {
		   	ofstream out_to_file("Pharmacy.text",ios::trunc);
			id=0;
		cout<<"\n Enter the necessary informations for the drug you want to store!!!"<<endl;
	
			for(int i=0;i<num_of_med;++i){
			    Med.ID=i+1;
				cout<<"Drug ID: "<<Med.ID<<endl;
				cin.ignore();
				cout<<"Enter Drug Name: "; getline(cin,Med.name);
				cout<<"Enter the quantity of this medicine: ";
				labe23:
	            cin.ignore();
				cin>>Med.quantity;
				if(Med.quantity<=0){
					cout<<"No such Quantity,enter again "; goto labe23;
				}
				cout<<"Enter Price: ";
				label24:
	            cin.ignore();
				cin>>Med.price;
				if(Med.price<0){
					cout<<"Price can't be negative,enter again "; goto label24;
				}
				cout<<"Enter Cost: ";
				label25:
	            cin.ignore();
				cin>>Med.cost_of_each_drug;
				if(Med.cost_of_each_drug<0){
					cout<<"Negative value is noallowed,enter again "; goto label25;
				}
				cin.ignore();
				cout<<"Enter Drug type(E.g Antibitic,Antiseptic,Disinfectant...): ";getline(cin,Med.type);
				cin.ignore();
				cout<<"Enter Manufactured Date: \n";
				label9:
				cout<<"      Day: "; cin>>Med.Manufacture_date.dd;
				if(Med.Manufacture_date.dd>31 || Med.Manufacture_date.dd<1){
					cout<<"Incorrect date out of bound enter again(1-31)!!!"<<endl;
					goto label9;
				}
				label_10:
				cout<<"      Month: "; cin>>Med.Manufacture_date.mm;
				if(Med.Manufacture_date.mm>12 || Med.Manufacture_date.mm<1){
					cout<<"Incorrect month out of bound enter again(1-12)!!!"<<endl;
					goto label_10;
				}
				label_11:
				cout<<"      Year: "; cin>>Med.Manufacture_date.yy;
				if(Med.Manufacture_date.yy<2000){
					cout<<"Incorrect year out of bound enter again(2000-)!!!"<<endl;
					goto label_11;
				}
				label_12:
				cout<<"Enter Expiry Date: \n";
				cout<<"      Day: "; cin>>Med.Expiry_date.dd;
				if(Med.Expiry_date.dd>31 || Med.Expiry_date.dd<1){
					cout<<"Incorrect date out of bound enter again(2000-)!!!"<<endl;
					goto label_12;
				}
				label_13:
				cout<<"      Month: "; cin>>Med.Expiry_date.mm;
				if(Med.Expiry_date.mm>12 || Med.Expiry_date.mm<1){
					cout<<"Incorrect month out of bound enter again(1-12)!!!"<<endl;
					goto label_13;
				}
				label_14:
				cout<<"      Year: "; cin>>Med.Expiry_date.yy;
				if(Med.Expiry_date.yy<2000){
					cout<<"Incorrect month out of bound enter again(2000-)!!!"<<endl;
					goto label_14;
				id=Med.ID;
				Loading_bar();
			}
	
			out_to_file<<med->ID<<" "<<med->name<<" "<<med->quantity<<" "<<med->price<<" "<<med->cost_of_each_drug<<" "
				    <<med->number_of_sold<<" "<<med->type<<" "<<med->Manufacture_date.dd<<" "<<med->Manufacture_date.mm<<" "
				    <<med->Manufacture_date.yy<<" "<<med->Expiry_date.dd<<" "<<med->Expiry_date.mm
				    <<" "<<med->Expiry_date.yy<<endl;
	
		}
		out_to_file.close();
		break;
	
	}
	
	}
	
	}
	
	void View_store(){
	HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
	ifstream infile("Pharmacy.text",ios::in);
	int m=0;
		//system("cls");
		if(infile.is_open()){
	  cout<<"The database of the medicine in the store is as shown below"<<endl;
	  cout<<"-----------------------------------------------------------------"<<endl;
	  cout<<"-----------------------------------------------------------------"<<endl;
	  SetConsoleTextAttribute(font_color,3);
	  cout<<setw(8)<<"Med.ID"<<setw(17)<<"Med. Name"<<setw(10)<<"Quant."<<setw(10)<<"Price"<<setw(10)<<"cost"<<setw(20)<<"Drug type"
	  	  <<setw(17)<<"Manufac.date"<<setw(15)<<"Expiry date"<<endl;
	        int check=0;
	   		cout.setf(ios_base::left);
	   		infile.seekg(0,ios::end);
	   		int final=infile.tellg();
	   		infile.seekg(0,ios::beg);
			for(int i=0;i<id;i++){
				if(m%2==0){
					SetConsoleTextAttribute(font_color,8);
				}
				else{
					SetConsoleTextAttribute(font_color,2);
				}m++;
		
				     infile>>med->ID;
				     infile>>med->name;
				     infile>>med->quantity;
				     infile>>med->price;
				     infile>>med->cost_of_each_drug;
				     infile>>med->number_of_sold;
	                 infile>>med->type;
	                 infile>>med->Manufacture_date.dd;
	                 infile>>med->Manufacture_date.mm;
	                 infile>>med->Manufacture_date.yy;
	                 infile>>med->Expiry_date.dd;
	                 infile>>med->Expiry_date.mm;
	                 infile>>med->Expiry_date.yy;

	                        cout<<setw(8)<<med->ID<<setw(17)<<med->name<<setw(10)<<med->quantity<<setw(10)
	                        <<med->price<<setw(10)<<med->cost_of_each_drug<<setw(18)<<med->type<<" "<<setw(1)
	                        <<med->Manufacture_date.dd<<"/"<<med->Manufacture_date.mm<<"/"<<med->Manufacture_date.yy<<setw(4)
	                        <<setw(6)<<"\t"<<med->Expiry_date.dd<<"/"<<med->Expiry_date.mm<<"/"<<med->Expiry_date.yy<<endl;
	                        
			}
		cout<<"-----------------------------------------------------------------"<<endl;
	    cout<<"-----------------------------------------------------------------"<<endl;
		}
		else{
	        cout<<"File open failed"<<endl;
		}
	}
	
	void check_stack(){
	   ifstream infile("Pharmacy.text",ios::in);
	   if(infile.is_open()){
		HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
		int m=0;
		system("cls");
		cout<<"Do you want to see the total or partial stack for specific medicine?1/0:__";
		int stack_choice,c=0;
		cin>>stack_choice;
		Loading_bar();
		system("cls");
		if(stack_choice==1){
	
			cout.setf(ios_base::left);
			SetConsoleTextAttribute(font_color,2);
			cout<<setw(8)<<"Drug ID"<<setw(18)<<"Name of Medicine"<<setw(13)<<"quantity"<<setw(10)<<"price"<<endl;
			SetConsoleTextAttribute(font_color,7);
			for(int i=1;i<=id;i++){
				if(m%2==0){
					SetConsoleTextAttribute(font_color,6);
				}
				else{
					SetConsoleTextAttribute(font_color,8);
				}
	                 infile>>med->ID;
				     infile>>med->name;
				     infile>>med->quantity;
				     infile>>med->price;
				     infile>>med->cost_of_each_drug;
				     infile>>med->number_of_sold;
	                 infile>>med->type;
	                 infile>>med->Manufacture_date.dd;
	                 infile>>med->Manufacture_date.mm;
	                 infile>>med->Manufacture_date.yy;
	                 infile>>med->Expiry_date.dd;
	                 infile>>med->Expiry_date.mm;
	                 infile>>med->Expiry_date.yy;
				m++;
				cout<<setw(10)<<med->ID<<setw(18)<<med->name<<setw(11)<<med->quantity<<setw(10)<<med->price<<endl;
	
			}
		}
	
		else{ int Med_ID;
			cout<<"Enter the ID of the medicine you want to see:  ";
			back:
			cin>>Med_ID;
			Loading_bar();
			system("cls");
			cout.setf(ios_base::left);
			while(!infile.eof())
				{    infile>>med->ID;
				     infile>>med->name;
				     infile>>med->quantity;
				     infile>>med->price;
				     infile>>med->cost_of_each_drug;
				     infile>>med->number_of_sold;
	                 infile>>med->type;
	                 infile>>med->Manufacture_date.dd;
	                 infile>>med->Manufacture_date.mm;
	                 infile>>med->Manufacture_date.yy;
	                 infile>>med->Expiry_date.dd;
	                 infile>>med->Expiry_date.mm;
	                 infile>>med->Expiry_date.yy;
					if(Med_ID==med->ID)
					{
					c++;
					break;
					}
				}
			if(c!=0){
				system("color 2");
				cout<<setw(10)<<"Drug ID"<<setw(18)<<"Name of Medicine"<<setw(10)<<"quantity"<<setw(10)<<"price"<<endl;
				SetConsoleTextAttribute(font_color,9);
	            cout<<setw(10)<<med->ID<<setw(18)<<med->name<<setw(13)<<med->quantity<<setw(15)<<med->price<<endl;
			}
			else {
			cout<<"The ID you entered don't have any match in our store. Enter again: ";
			goto back;
			}
			SetConsoleTextAttribute(font_color,7);
		}
		SetConsoleTextAttribute(font_color,7);
	   }
	   else
	   {
	        cout<<"File open failed"<<endl;
	   }
	}
	
	void Expiry_Notification_Indicator(){
		int n=0;
		SYSTEMTIME current_time;
		GetSystemTime (&current_time);
	    HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
	    ifstream infile("Pharmacy.text");
	    if(infile.is_open()){
	    cout.setf(ios_base::left);
		for(int i=1;i<=id;i++){
	            infile>>med->ID;
				     infile>>med->name;
				     infile>>med->quantity;
				     infile>>med->price;
				     infile>>med->cost_of_each_drug;
				     infile>>med->number_of_sold;
	                 infile>>med->type;
	                 infile>>med->Manufacture_date.dd;
	                 infile>>med->Manufacture_date.mm;
	                 infile>>med->Manufacture_date.yy;
	                 infile>>med->Expiry_date.dd;
	                 infile>>med->Expiry_date.mm;
	                 infile>>med->Expiry_date.yy;
			if(current_time.wYear>med->Expiry_date.yy){
				SetConsoleTextAttribute(font_color,4); n++;
	 			Notification_bar();
			}
	
			else if(current_time.wYear==med->Expiry_date.yy){
	
				if(current_time.wMonth>med->Expiry_date.mm){
					SetConsoleTextAttribute(font_color,4); n++;
					Notification_bar();
			    }
	
			    else if(current_time.wMonth==med->Expiry_date.mm){
	
				    	if(current_time.wDay>=med->Expiry_date.dd){
				    		SetConsoleTextAttribute(font_color,5); n++;
				    		Notification_bar();
	
				    	}
				}
			}
		}
		infile.close();
		if(n==0){
		    SetConsoleTextAttribute(font_color,7);
		}
	
	    }
	    else
	        cout<<"File open failed"<<endl;
	
	}
	
	void Update_Med(){  // can be done in other way
  int M_id;
  cout<<"Enter the ID of the medicine you are gong to modify:  "; cin>>M_id;
  Loading_bar();
     system("cls");
     ifstream infile("Pharmacy.text");
     ofstream ofile("newPharmacy.text");
 
     if(infile.is_open()){
         for(int i=1;i<=id;i++){
                  infile>>med->ID;
         infile>>med->name;
         infile>>med->quantity;
         infile>>med->price;
         infile>>med->cost_of_each_drug;
         infile>>med->number_of_sold;
                  infile>>med->type;
                  infile>>med->Manufacture_date.dd;
                  infile>>med->Manufacture_date.mm;
                  infile>>med->Manufacture_date.yy;
                  infile>>med->Expiry_date.dd;
                  infile>>med->Expiry_date.mm;
                  infile>>med->Expiry_date.yy;
                 if(M_id!=med->ID){
                      if(ofile.is_open()){
                      ofile<<med->ID<<" ";
                      ofile<<med->name<<" ";
                      ofile<<med->quantity<<" ";
                      ofile<<med->price<<" ";
                      ofile<<med->cost_of_each_drug<<" ";;
                      ofile<<med->number_of_sold<<" ";
                      ofile<<med->type<<" ";
                      ofile<<med->Manufacture_date.dd<<" ";
                      ofile<<med->Manufacture_date.mm<<" ";
                      ofile<<med->Manufacture_date.yy<<" ";
                      ofile<<med->Expiry_date.dd<<" ";
                      ofile<<med->Expiry_date.mm<<" ";
                      ofile<<med->Expiry_date.yy<<" "<<endl;
                         }
                         else{
                             cout<<"New file open failed"<<endl;
                             break;
                         }
                 }
                 else if(M_id==med->ID){
                  med->ID=M_id;
                  cout<<"Enter new drug name: ";
         cin>>med->name;
         cout<<"Enter new drug quntity: ";
         cin>>med->quantity;
         cout<<"Enter new drug price: ";
         cin>>med->price;
         cout<<"Enter new drug cost: ";
         cin>>med->cost_of_each_drug;
         med->number_of_sold=0;
         cout<<"Enter new drug type: ";
                  cin>>med->type;
                  cout<<"Enter new Manufactured Date: \n";
                  cout<<"      Day: ";
                  cin>>med->Manufacture_date.dd;
                  cout<<"      Month: ";
                  cin>>med->Manufacture_date.mm;
                  cout<<"      Year: ";
                  cin>>med->Manufacture_date.yy;
                  cout<<"Enter new Expiry Date: \n";
                  cout<<"      Day: ";
                  cin>>med->Expiry_date.dd;
                  cout<<"      Month: ";
                  cin>>med->Expiry_date.mm;
                  cout<<"      Year: ";
                  cin>>med->Expiry_date.yy;
                  
                  ofile<<med->ID<<" ";
                     ofile<<med->name<<" ";
                     ofile<<med->quantity<<" ";
                     ofile<<med->price<<" ";
                     ofile<<med->cost_of_each_drug<<" ";;
                     ofile<<med->number_of_sold<<" ";
                     ofile<<med->type<<" ";
                     ofile<<med->Manufacture_date.dd<<" ";
                     ofile<<med->Manufacture_date.mm<<" ";
                     ofile<<med->Manufacture_date.yy<<" ";
                     ofile<<med->Expiry_date.dd<<" ";
                     ofile<<med->Expiry_date.mm<<" ";
                     ofile<<med->Expiry_date.yy<<" "<<endl; id--;
             }
 
             }
         infile.close();
         ofile.close();
 
         if(remove("Pharmacy.text")==0){
             cout<<"The old file is removed"<<endl;
        }
        else{
         cout<<"File removing is failed"<<endl;
        }
        if(rename("newPharmacy.text","Pharmacy.text")==0){
            cout<<"The new file is renamed"<<end

void Dispose_Med(){
  int n,temp;
  SYSTEMTIME current_time;
  GetSystemTime (&current_time);
     HANDLE font_color=GetStdHandle(STD_OUTPUT_HANDLE);
     ifstream infile("Pharmacy.text");
     if(infile.is_open()){
     cout.setf(ios_base::left);
     ofstream outfile("Deleted.text",ios::app);
  for(int i=0;i<id;i++){
               infile>>med->ID;
         infile>>med->name;
         infile>>med->quantity;
         infile>>med->price;
         infile>>med->cost_of_each_drug;
         infile>>med->number_of_sold;
                  infile>>med->type;
                  infile>>med->Manufacture_date.dd;
                  infile>>med->Manufacture_date.mm;
                  infile>>med->Manufacture_date.yy;
                  infile>>med->Expiry_date.dd;
                  infile>>med->Expiry_date.mm;
                  infile>>med->Expiry_date.yy;
   if(current_time.wYear>med->Expiry_date.yy){
    temp=med->ID;
    if(outfile.is_open()){
    outfile<<med->ID<<" "<<med->name<<" "<<med->quantity<<" "<<med->price<<" "<<med->cost_of_each_drug<<" "<<med->number_of_sold<<" "<<med->type<<" "
           <<med->Manufacture_date.dd<<" "<<med->Manufacture_date.mm<<" "<<med->Manufacture_date.yy<<" "<<med->Expiry_date.dd<<" "
        <<med->Expiry_date.mm<<" "<<med->Expiry_date.yy<<endl;
   }
    Delete_Med(temp);
   }
 
   else if(current_time.wYear==med->Expiry_date.yy){
 
    if(current_time.wMonth>med->Expiry_date.mm){
     temp=med->ID;
     if(outfile.is_open()){
     outfile<<med->ID<<" "<<med->quantity<<" "<<med->price<<" "<<med->cost_of_each_drug<<" "<<med->number_of_sold<<" "
           <<med->Manufacture_date.dd<<" "<<med->Manufacture_date.mm<<" "<<med->Manufacture_date.yy<<" "<<med->Expiry_date.dd<<" "
        <<med->Expiry_date.mm<<" "<<med->Expiry_date.yy<<endl;
    }
    Delete_Med(temp);
       }
 
       else if(current_time.wMonth==med->Expiry_date.mm){
 
         if(current_time.wDay>=med->Expiry_date.dd){
          temp=med->ID;
       if(outfile.is_open()){
       outfile<<med->ID<<" "<<med->quantity<<" "<<med->price<<" "<<med->cost_of_each_drug<<" "<<med->number_of_sold<<" "
              <<med->Manufacture_date.dd<<" "<<med->Manufacture_date.mm<<" "<<med->Manufacture_date.yy<<" "<<med->Expiry_date.dd<<" "
           <<med->Expiry_date.mm<<" "<<med->Expiry_date.yy<<endl;
      }
    Delete_Med(temp);
         }
    }
   }
  }
 infile.close();
 outfile.close();
     }
     else
         cout<<"File open failed"<<endl;
  
  
 }
